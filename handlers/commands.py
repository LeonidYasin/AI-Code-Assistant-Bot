import logging
from telegram import Update
from telegram.ext import ContextTypes, CommandHandler
from core.llm.client import llm_client
from core.project.analyzer import analyze_project

logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    help_text = (
        "ü§ñ *AI Code Assistant*\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "‚Ä¢ `/—Å–æ–∑–¥–∞–π —Ñ–∞–π–ª.py –æ–ø–∏—Å–∞–Ω–∏–µ` ‚Äì –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞\n"
        "‚Ä¢ `/–∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª.py` ‚Äì –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫\n"
        "‚Ä¢ `/–∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–∞–π–ª.py` ‚Äì –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞\n"
        "‚Ä¢ `cmd: –∫–æ–º–∞–Ω–¥–∞` ‚Äì –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ shell-–∫–æ–º–∞–Ω–¥—ã\n\n"
        "–ü—Ä–∏–º–µ—Ä:\n"
        "`/—Å–æ–∑–¥–∞–π api.py Flask REST API —Å JWT`"
    )
    
    await update.message.reply_text(
        help_text,
        parse_mode="MarkdownV2"
    )

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await update.message.reply_text(
        "üÜò –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
        parse_mode="Markdown"
    )

async def analyze_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /analyze (–∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞)"""
    project_context = analyze_project(config.PROJECT_DIR)
    summary = llm_client.call(
        "–ö—Ä–∞—Ç–∫–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞:\n" + 
        project_context[:5000]  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    )
    
    await update.message.reply_text(
        f"üìä –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞:\n\n{summary[:4000]}",
        parse_mode="Markdown"
    )

def setup_commands(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_cmd))
    application.add_handler(CommandHandler("analyze", analyze_cmd))